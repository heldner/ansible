---
- hosts: openwrt
  remote_user: root
  gather_facts: false
  strategy: free
  vars:
    openwrt_scp: /usr/bin/scp -O
    openwrt_scp_if_ssh: smart
  roles:
    - gekmihesg.openwrt
  tasks:
    - name: Set drop on wan
      uci:
        command: set
        key: firewall.@zone[1]
        value:
          input: DROP
          forward: DROP
      notify:
        - Commit pending changes
        - Restart firewall

    - name: Set ipaddr from 24 net
      uci:
        command: set
        key: network.lan
        value:
          ipaddr: 192.168.24.1
      notify:
        - Commit pending changes
        - Restart network

    - name: Set ipaddr from 4 net for onu stick
      uci:
        command: set
        key: network.wan
        value:
          proto: static
          ipaddr: 192.168.4.2
          netmask: 255.255.255.0
      notify:
        - Commit pending changes
        - Restart network

    - name: Add vlan for rostelecom
      uci:
        command: set
        key: network.eth1_10
        value: device
      notify:
        - Commit pending changes
      tags: rt

    - name: Configure vlan for rostelecom
      uci:
        command: set
        key: network.eth1_10
        value:
          type: 8021q
          ifname: eth1
          vid: '10'
          name: eth1.10
          macaddr: 10:A3:B8:F1:EF:21
      notify:
        - Commit pending changes
        - Restart network
      tags: rt

    - name: Add rostelecom interface
      uci:
        command: set
        key: network.rt
        value: interface
      notify:
        - Commit pending changes
      tags: rt

    - name: Configure rostelecom pppoe
      uci:
        command: set
        key: network.rt
        value:
          proto: pppoe
          username: '{{ pppoe_username_encrypted }}'
          password: '{{ pppoe_password_encrypted }}'
          device: eth1.10
          keepalive: '4 5'
      notify:
        - Commit pending changes
        - Restart network
      tags: rt

    - name: Get current wan ifaces
      uci:
        command: show
        key: firewall.@zone[1].network
      register: _firewall_wan
      tags: rt

    - name: Add rt interface to wan zone
      uci:
        command: add_list
        key: firewall.@zone[1].network
        value: rt
      notify:
        - Commit pending changes
        - Restart firewall
      when: _firewall_wan.result | regex_search('rt') == None
      tags: rt

    - name: Set redirect to https
      uci:
        command: set
        key: uhttpd.main
        value:
          redirect_https: 1
      notify:
        - Commit pending changes
        - Restart uhttpd

    - name: Install luci theme
      opkg:
        name: '{{ item }}'
        update_cache: true
      loop:
        - luci-compat
        - luci-lib-ipkg

    - name: Get installed argome theme package
      ansible.builtin.shell:
        opkg list-installed | grep luci-theme-argon
      register: _installed_argon
      failed_when: false
      tags: theme

    - name: Download theme
      command:
        cmd: |
          wget -O luci-theme-argon.ipk --no-check-certificate
          https://github.com/jerrykuku/luci-theme-argon/releases/download/v2.3.1/luci-theme-argon_2.3.1_all.ipk
        creates: luci-theme-argon.ipk
      when: _installed_argon.stdout | regex_search('luci-theme-argon') == None
      tags: theme

    - name: Install luci theme
      opkg:
        name: luci-theme-argon.ipk
      when: _installed_argon.stdout | regex_search('luci-theme-argon') == None
      tags: theme

  handlers:
    - name: Commit pending changes
      uci:
        command: commit

    - name: Restart network
      service:
        name: network
        state: restarted

    - name: Restart uhttpd
      service:
        name: uhttpd
        state: restarted

    - name: Restart firewall
      service:
        name: firewall
        state: restarted
