"Вырубаем режим совместимости с VI:
set nocompatible
set hlsearch            "Подсветка результатов поиска
set colorcolumn=80
set title
set ignorecase
set smartcase
filetype plugin indent on
"Включаем распознавание типов файлов и типо-специфичные плагины:
filetype off
filetype plugin on
set smarttab            "insert tabs on the start of a line according to context
set expandtab           "Ставим табы пробелами
set softtabstop=3       "4 пробела в табе
set autoindent          "Автоотступ
set nu                  "Включаем нумерацию строк
set mousehide           "Спрятать курсор мыши когда набираем текст
set mouse=nv            "Включить поддержку мыши
set novisualbell        "Не мигать
set t_vb=               "Не пищать! (Опции 'не портить текст', к сожалению, нету)
set showtabline=0       "Вырубаем черточки на табах
"set foldcolumn=1        "Колоночка, плюсики для скрытия блоков кода:
set showcmd             "Показывать незавершенные команды в статусбаре
set t_Co=256            "Включаем 256 цветов в терминале, мы ведь работаем из иксов?
set laststatus=2        "Всегда показывать статусную строку
syntax on                "Включить подсветку синтаксиса
set termencoding=utf-8   "Кодировка терминала
"set encoding=utf-8       "Кодировка файлов по умолчанию
"Возможные кодировки файлов, если файл не в unicode кодировке,
"то будет использоваться cp1251
set fileencodings=utf8,cp1251
"Не выгружать буфер, когда переключаемся на другой
set hidden
"Удобное поведение backspace
set backspace=indent,eol,start whichwrap+=<,>,[,]
"Переносим на другую строчку, разрываем строки
set wrap
set linebreak
"Вырубаем .swp и ~ (резервные) файлы
set nobackup
set noswapfile

"Автоматическое удаление пробелов в конце строки
autocmd BufWritePre * if index(['markdown', 'vim'], &ft) < 0 | :%s/\s\+$//e

"Автоподгрузка ~/.vimrc
autocmd! bufwritepost {{ neovim_home }}/init.vim source %

" Назначить на Esc выход из терминала
tnoremap <Esc> <C-\><C-n>

" Путь до python3 использования единых модулей
let g:python3_host_prog = '/usr/bin/python3'

"использовать системный буффер обмена
set clipboard=unnamedplus

"Plug
call plug#begin('{{ neovim_home }}/plugged')
Plug 'airblade/vim-gitgutter'
Plug 'aklt/plantuml-syntax'
Plug 'bling/vim-airline'
Plug 'chr4/nginx.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'dense-analysis/ale'
Plug 'editorconfig/editorconfig-vim'
Plug 'ekalinin/Dockerfile.vim'
Plug 'ervandew/supertab'
Plug 'exafunction/codeium.vim'
Plug 'fatih/vim-go'
Plug 'hashivim/vim-terraform'
Plug 'jremmen/vim-ripgrep'
Plug 'junegunn/vim-easy-align'
Plug 'mzlogin/vim-markdown-toc'
Plug 'nanotech/jellybeans.vim', { 'as': 'jellybeans' }
Plug 'pearofducks/ansible-vim'
Plug 'plasticboy/vim-markdown'
Plug 'powerman/vim-plugin-AnsiEsc'
Plug 'rbgrouleff/bclose.vim'
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline-themes'
Plug 'vimsence/vimsence'
call plug#end()

" Цветовая схема
colorscheme jellybeans

" disable auto linter for ansible
let g:syntastic_ansible_checkers = ['yamllint']

" enable yaml linter
let g:syntastic_yaml_checkers = ['yamllint']

" autoremove spaces endof line
autocmd BufNewFile,BufRead *.conf.j2 :set filetype=nginx

" autoremove spaces endof line
autocmd FileType cpp,py,yaml.ansible autocmd BufWritePre <buffer> %s/\s\+$//e

" markdown
set conceallevel=0
let g:vim_markdown_folding_disabled = 1
"let g:vim_markdown_folding_level = 6

" alias Bclose
command Bc Bclose

" tags
let g:autotagTagsFile=".tags"

" F-keys
set pastetoggle=<F2>    "Режим вставки
" insert datetime in debian way format
map <F3> :put =strftime('%a, %d %b %Y %T %z')<CR>
" run interactive python with current file
map <F5> :!ipython3 -i -c '\%load %'

" cyrilic support
set langmap=ёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ;`qwertyuiop[]asdfghjkl\\;'zxcvbnm\\,.~QWERTYUIOP{}ASDFGHJKL:\\"ZXCVBNM<>

" fast buffers navigaion
nmap <S-k> :bnext<CR>
nmap <S-j> :bprev<CR>

" codeium settings
let g:codeium_enabled = v:false
let g:codeium_no_map_tab = v:true
imap <script><silent><nowait><expr> <C-g> codeium#Accept()
let g:codeium_filetypes = {
      \ '*': v:false,
      \ 'bash': v:true,
      \ 'python': v:true,
      \ 'go': v:true,
      \ 'c': v:true,
      \ 'typescript': v:true,
      \ }

" vim-airline settings
let g:airline_powerline_fonts = 1
let g:airline_theme = 'powerlineish'
let g:airline_left_sep= ''
let g:airline_right_sep=''
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline#extensions#hunks#enabled = 0
let g:airline#extensions#hunks#non_zero_only = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline_mode_map = {
  \ '__' : ' - ',
  \ 'n'  : ' N ',
  \ 'i'  : ' I ',
  \ 'r'  : ' R ',
  \ 'c'  : ' C ',
  \ 'v'  : ' V ',
  \ 'V'  : ' VL',
  \ '' : ' VB',
  \ 's'  : ' S ',
  \ 'S'  : ' S ',
  \ '' : ' S ',
  \ }

" vimsence settings
let g:vimsence_small_text = 'NeoVim'
let g:vimsence_small_image = 'neovim'
let g:vimsence_editing_details = 'Editing: {}'
let g:vimsence_editing_state = 'Working on: {}'
