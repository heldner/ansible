---
- name: Install nginx
  ansible.builtin.package:
    state: present
    name:
      - nginx
  tags: nginx
  become: true

- name: Remove default config
  ansible.builtin.file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  become: true
  tags: nginx

- name: Allow ssh
  ansible.builtin.iptables:
    action: insert
    chain: INPUT
    protocol: tcp
    destination_ports: [80,443]
    ctstate: NEW
    jump: ACCEPT
  become: true
  tags: nginx

- name: Create nginx ssl directory
  ansible.builtin.file:
    state: directory
    path: "/etc/nginx/ssl"
    mode: '0755'
  become: true
  tags: nginx

- name: Certificates routines
  ansible.builtin.import_role:
    name: certificates
  tags:
    - nginx
    - certificates

- name: Copy ssl cert chain to dest server
  ansible.builtin.copy:
    src: "{{ cert_base_filepath + '.chain.crt' }}"
    dest: "/etc/nginx/ssl/{{ cert_domain + '.chain.crt' }}"
    mode: "0644"
  notify: Restart nginx
  when: not acme_enabled
  no_log: "{{ nolog | default('true') | bool }}"
  become: true
  tags: nginx

- name: Copy ssl key
  ansible.builtin.copy:
    src: "{{ cert_base_filepath + '.key' }}"
    dest: "/etc/nginx/ssl/{{ cert_domain + '.key' }}"
    group: www-data
    mode: "0640"
  notify: Restart nginx
  when: not acme_enabled
  no_log: "{{ nolog | default('true') | bool }}"
  become: true
  tags: nginx

- name: Setup nginx.conf
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    mode: 0644
  become: true
  notify: Restart nginx
  tags: nginx

- name: Configure nginx
  ansible.builtin.import_role:
    name: nginx
    tasks_from: gen_config
  vars:
    nginx_template: custom_nginx.conf.j2
  tags:
    - nginx
