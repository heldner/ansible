#!/bin/bash

action="${1:-up}"
user_name="{{ snx_user_name }}"
ping_check_ip="{{ snx_check_ip }}"
vpn_addr="{{ snx_vpn_addr }}"
snx_cmd="/usr/bin/snx"

if command -v sudo >/dev/null; then
  become_cmd=sudo
elif command -v doas >/dev/null; then
  become_cmd=doas
else
  echo "not found sudo"
  exit 1
fi

get_pass() {
  pass {{ snx_pass_name }} | head -1
}

restart_dns() {
  echo restart dns
  $become_cmd systemctl restart unbound
}

up() {
  pwd=$(get_pass)
  echo "$pwd" |
    $snx_cmd \
    -s "$vpn_addr" \
    -u "$user_name"

  $become_cmd tee <<EOF /etc/resolv.conf > /dev/null
nameserver 127.0.0.1
search {{ snx_domain }}
EOF

  restart_dns
  default_scope
}

down() {
    $snx_cmd -d
}

if_status() {
  ping -w 1 -c 1 $ping_check_ip
}

restart_vpn() {
  down
  up
}

default_scope() {
  interface=tunsnx
  data=($(ip -o address show "$interface" | awk -F ' +' '{print $4 " " $6 " " $8}'))

  LOCAL_ADDRESS_INDEX=0
  PEER_ADDRESS_INDEX=1
  SCOPE_INDEX=2

  if [ "${data[$SCOPE_INDEX]}" = "global" ]; then
    echo "[+] Interface ${interface} is already set to global scope. Skip!"
    exit 0
  else
    echo "[+] Interface ${interface} is set to scope ${data[$SCOPE_INDEX]}."

    tmpfile=$(mktemp --suffix=snxwrapper-routes)
    echo "[+] Saving current IP routing table..."
    ip route | grep tunsnx | grep -v 'proto kernel' >$tmpfile

    echo "[+] Deleting current interface ${interface}..."
    $become_cmd ip address del ${data[$LOCAL_ADDRESS_INDEX]} peer ${data[$PEER_ADDRESS_INDEX]} dev ${interface}

    echo "[+] Recreating interface ${interface} with global scope..."
    $become_cmd ip address add ${data[$LOCAL_ADDRESS_INDEX]} dev ${interface} peer ${data[$PEER_ADDRESS_INDEX]} scope global

    echo "[+] Restoring routing table..."
    #$become_cmd ip route restore <$tmpfile 2>/dev/null
    while read -r line; do
       $become_cmd ip r add $line
    done < "$tmpfile"

    echo "[+] Cleaning temporary files..."
    rm $tmpfile

    echo "[+] Interface ${interface} is set to global scope. Done!"
    echo "[+] Result:"
    ip -o address show "tunsnx" | awk -F ' +' '{print $4 " " $6 " " $8}'
    exit 0
  fi
}

case $action in
  up)
    if if_status; then
      echo stop
      exit
    else
      echo restart
      restart_vpn
    fi
    ;;
  restart)
    restart_vpn ;;
  down)
    down ;;
  status)
    if_status ;;
esac
